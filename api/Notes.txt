Initial Steps to start with back-end development from scratch:

Step 1: Created index.js file
Step 2: Initiate Node.js application by running "npm init -y" in terminal (inside the folder api)
        This will create a package.json file.
        Package.json will have application name, version name, name of main file.
        Here we will install dependencies, libraries and will write scripts.

Step 3: Install Libraries
    Step 3.1: Install Express by running "npm i express" in terminal (inside the folder api)
            Express will be our Node.JS framework, so we can create REST API on our server
    Step 3.2: Install mongoose by running "npm i mongoose" in terminal (inside the folder api)
            In this project we will use MongoDB, mongoose is used to connect MongoDB with Backend(Node.js)
    Step 3.3: Install dotenv by running "npm i dotenv" in terminal (inside the folder api)
            This library will help us to hide our secret keys, crucial values and other important stuff.
            Eg: We will be using stripe payment method, which will provide us secret key for the identification.
                If we will not hide our secret key then anybody can create a payment operation and charge our users.
    Step 3.4: Install nodemon by running "npm i nodemon" in terminal (inside the folder api)
            It allows us to automatically refresh the application after changes, elseafter every change we have to
            go to the terminal and start the application again and again. 
            In crux, it is hot reloading.  

Step 4: Use/Integrate Nodemon
    We run the Backend using "node filename". Ex: "node index.js". This will execute the code inside index.js.
    But we have to run it again and again. Instead we can run it using "nodemon" -> "nodemon index.js"
    Instead of running "nodemon index.js" whenever we start the application,
    we will create the script "start":"nodemon index.js".
    We have used index.js because, we have marked index.js as our main file in package.json (industry standard)
    Now we can directly run our script using "npm start"

Step 5: Create express application